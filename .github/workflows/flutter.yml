name: Flutter

on:
  push

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test --verbose --coverage --coverage-path=~/coverage/lcov.info
      - uses: codecov/codecov-action@v1.0.2
        if: runner.os == 'Linux'
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ~/coverage/lcov.info

  build-android:
      name: Build Android
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [windows-latest]
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: android
          path: build/app/outputs/flutter-apk
          
  build-ios:
      name: Build iOS
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [macos-latest]
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: ProvisioningProfile
        run: |
          echo "${{ secrets.PROVISIONING_BASE64 }}" > adhoc.mobileprovision.txt
          base64 --decode adhoc.mobileprovision.txt > adhoc.mobileprovision
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - run: flutter pub get
      - run: pod update
        working-directory: ./ios
      - run: flutter analyze
      - run: flutter build ios --no-codesign --debug
      - run: |
          cd ios
          bundle exec fastlane build_ipa
          cd ..
        env:
          GITHUB_ACTOR: ${{ GITHUB_ACTOR }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      - uses: actions/upload-artifact@v1
        with:
          name: ios
          path: build/ios
  
  build-web:
      name: Build WEB
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest]
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'
      - run: flutter config --enable-web
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter build web
      - uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          publish_branch: gh-pages
          
  upload-android:
    name: Upload Android
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: android
      - shell: bash
        run: |
          ls -la android
      - uses: wzieba/Firebase-Distribution-Github-Action@v1.1.1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          token: ${{secrets.FIREBASE_ANDROID_TOKEN}}
          file: android/app-release.apk
          
  upload-ios:
    name: Upload iOS
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: ios
      - shell: bash
        run: |
          ls -la ios
      - uses: wzieba/Firebase-Distribution-Github-Action@v1.1.1
        with:
          appId: ${{secrets.FIREBASE_IOS_APP_ID}}
          token: ${{secrets.FIREBASE_IOS_TOKEN}}
          file: ios/app-release.ipa
